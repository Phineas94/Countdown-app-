{"ast":null,"code":"var _jsxFileName = \"/home/panashe/countdown/Countdown-app-/src/CountdownTimer.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useCountdown } from './hooks/useCountdown';\nimport DateTimeDisplay from './DateTimeDisplay'; // this component show the expired notice with a text. \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpiredNotice = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expired-notice\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Expired!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please select a future date and time.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ExpiredNotice;\n\nconst ShowCounter = _ref => {\n  let {\n    days,\n    hours,\n    minutes,\n    seconds\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"show-counter\",\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://tapasadhikary.com\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      className: \"countdown-link\",\n      children: [/*#__PURE__*/_jsxDEV(DateTimeDisplay, {\n        value: days,\n        type: 'Days',\n        isDanger: days <= 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DateTimeDisplay, {\n        value: hours,\n        type: 'Hours',\n        isDanger: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DateTimeDisplay, {\n        value: minutes,\n        type: 'Mins',\n        isDanger: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DateTimeDisplay, {\n        value: seconds,\n        type: 'Seconds',\n        isDanger: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n};\n\n_c2 = ShowCounter;\n\nconst CountdownTimer = _ref2 => {\n  _s();\n\n  let {\n    targetDate\n  } = _ref2;\n  const [days, hours, minutes, seconds] = useCountdown(targetDate);\n\n  if (days + hours + minutes + seconds <= 0) {\n    return /*#__PURE__*/_jsxDEV(ExpiredNotice, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(ShowCounter, {\n      days: days,\n      hours: hours,\n      minutes: minutes,\n      seconds: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(CountdownTimer, \"k4nYSprLtbeXmgny6/HJFuVOyFU=\", false, function () {\n  return [useCountdown];\n});\n\n_c3 = CountdownTimer;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ExpiredNotice\");\n$RefreshReg$(_c2, \"ShowCounter\");\n$RefreshReg$(_c3, \"CountdownTimer\");","map":{"version":3,"sources":["/home/panashe/countdown/Countdown-app-/src/CountdownTimer.js"],"names":["React","useCountdown","DateTimeDisplay","ExpiredNotice","ShowCounter","days","hours","minutes","seconds","CountdownTimer","targetDate"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,OAAOC,eAAP,MAA4B,mBAA5B,C,CAGA;;;;AACA,MAAMC,aAAa,GAAG,MAAM;AAC1B,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAPD;;KAAMA,a;;AAeJ,MAAMC,WAAW,GAAG,QAAuC;AAAA,MAAtC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA;AAAxB,GAAsC;AACzD,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACE;AACE,MAAA,IAAI,EAAC,2BADP;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,GAAG,EAAC,qBAHN;AAIE,MAAA,SAAS,EAAC,gBAJZ;AAAA,8BAME,QAAC,eAAD;AAAiB,QAAA,KAAK,EAAEH,IAAxB;AAA8B,QAAA,IAAI,EAAE,MAApC;AAA4C,QAAA,QAAQ,EAAEA,IAAI,IAAI;AAA9D;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,eAAD;AAAiB,QAAA,KAAK,EAAEC,KAAxB;AAA+B,QAAA,IAAI,EAAE,OAArC;AAA8C,QAAA,QAAQ,EAAE;AAAxD;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAUE,QAAC,eAAD;AAAiB,QAAA,KAAK,EAAEC,OAAxB;AAAiC,QAAA,IAAI,EAAE,MAAvC;AAA+C,QAAA,QAAQ,EAAE;AAAzD;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE,QAAC,eAAD;AAAiB,QAAA,KAAK,EAAEC,OAAxB;AAAiC,QAAA,IAAI,EAAE,SAAvC;AAAkD,QAAA,QAAQ,EAAE;AAA5D;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAnBD;;MAAMJ,W;;AAsBR,MAAMK,cAAc,GAAG,SAAoB;AAAA;;AAAA,MAAnB;AAAEC,IAAAA;AAAF,GAAmB;AACzC,QAAM,CAACL,IAAD,EAAOC,KAAP,EAAcC,OAAd,EAAuBC,OAAvB,IAAkCP,YAAY,CAACS,UAAD,CAApD;;AAEA,MAAIL,IAAI,GAAGC,KAAP,GAAeC,OAAf,GAAyBC,OAAzB,IAAoC,CAAxC,EAA2C;AACzC,wBAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO;AACL,wBACE,QAAC,WAAD;AACE,MAAA,IAAI,EAAEH,IADR;AAEE,MAAA,KAAK,EAAEC,KAFT;AAGE,MAAA,OAAO,EAAEC,OAHX;AAIE,MAAA,OAAO,EAAEC;AAJX;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;AACF,CAfD;;GAAMC,c;UACoCR,Y;;;MADpCQ,c","sourcesContent":["import React from 'react';\nimport { useCountdown } from './hooks/useCountdown';\nimport DateTimeDisplay from './DateTimeDisplay';\n\n\n// this component show the expired notice with a text. \nconst ExpiredNotice = () => {\n  return (\n    <div className=\"expired-notice\">\n      <span>Expired!!!</span>\n      <p>Please select a future date and time.</p>\n    </div>\n  );\n};\n\n\n\n\n\n\n\n  const ShowCounter = ({ days, hours, minutes, seconds }) => {\n    return (\n      <div className=\"show-counter\">\n        <a\n          href=\"https://tapasadhikary.com\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"countdown-link\"\n        >\n          <DateTimeDisplay value={days} type={'Days'} isDanger={days <= 3} />\n          <p>:</p>\n          <DateTimeDisplay value={hours} type={'Hours'} isDanger={false} />\n          <p>:</p>\n          <DateTimeDisplay value={minutes} type={'Mins'} isDanger={false} />\n          <p>:</p>\n          <DateTimeDisplay value={seconds} type={'Seconds'} isDanger={false} />\n        </a>\n      </div>\n    );\n  };\n  \n\nconst CountdownTimer = ({ targetDate }) => {\n  const [days, hours, minutes, seconds] = useCountdown(targetDate);\n\n  if (days + hours + minutes + seconds <= 0) {\n    return <ExpiredNotice />;\n  } else {\n    return (\n      <ShowCounter\n        days={days}\n        hours={hours}\n        minutes={minutes}\n        seconds={seconds}\n      />\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}